.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ANDROIDDUMP 1"
.TH ANDROIDDUMP 1 "2020-10-29" "3.4.0" "The Wireshark Network Analyzer"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
androiddump \- Provide interfaces to capture from Android devices
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBandroiddump\fR
[\ \fB\-\-help\fR\ ]
[\ \fB\-\-version\fR\ ]
[\ \fB\-\-extcap\-version\fR\ ]
[\ \fB\-\-debug\fR\ ]
[\ \fB\-\-extcap\-interfaces\fR\ ]
[\ \fB\-\-extcap\-dlts\fR\ ]
[\ \fB\-\-extcap\-interface\fR=<interface>\ ]
[\ \fB\-\-extcap\-config\fR\ ]
[\ \fB\-\-capture\fR\ ]
[\ \fB\-\-fifo\fR=<path\ to\ file\ or\ pipe>\ ]
[\ \fB\-\-adb\-server\-ip\fR=<\s-1IP\s0\ address>\ ]
[\ \fB\-\-adb\-server\-tcp\-port\fR=<\s-1TCP\s0\ port>\ ]
[\ \fB\-\-logcat\-text\fR=<\s-1TRUE\s0\ or\ \s-1FALSE\s0>\ ]
[\ \fB\-\-bt\-server\-tcp\-port\fR=<\s-1TCP\s0\ port>\ ]
[\ \fB\-\-bt\-forward\-socket\fR=<\s-1TRUE\s0\ or\ \s-1FALSE\s0>\ ]
[\ \fB\-\-bt\-local\-ip\fR=<\s-1IP\s0\ address>\ ]
[\ \fB\-\-bt\-local\-tcp\-port\fR=<\s-1TCP\s0\ port>\ ]
.PP
\&\fBandroiddump\fR
\&\ \fB\-\-extcap\-interfaces\fR\ 
[\ \fB\-\-adb\-server\-ip\fR=<\s-1IP\s0\ address>\ ]
[\ \fB\-\-adb\-server\-tcp\-port\fR=<\s-1TCP\s0\ port>\ ]
.PP
\&\fBandroiddump\fR
\&\ \fB\-\-extcap\-interface\fR=<interface>\ 
[\ \fB\-\-extcap\-dlts\fR\ ]
.PP
\&\fBandroiddump\fR
\&\ \fB\-\-extcap\-interface\fR=<interface>\ 
[\ \fB\-\-extcap\-config\fR\ ]
.PP
\&\fBandroiddump\fR
\&\ \fB\-\-extcap\-interface\fR=<interface>\ 
\&\ \fB\-\-fifo\fR=<path\ to\ file\ or\ pipe>\ 
\&\ \fB\-\-capture\fR\ 
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBAndroiddump\fR is a extcap tool that provide interfaces to capture from
Android device. There is only two requirements:
.PP
1. You must have Android \s-1SDK\s0 and add it \s-1PATH\s0 environment variable.
\&\s-1PATH\s0 should contain directory with tools like \*(L"adb\*(R" and \*(L"android\*(R".
Android \s-1SDK\s0 for various platform are available on:
https://developer.android.com/sdk/index.html#Other
.PP
2. You must have permission to Android devices. Some Android devices requires
on-screen authentication.
.PP
Supported interfaces:
.IP "1. Logcat Main (binary [<=Jelly Bean] or text)" 4
.IX Item "1. Logcat Main (binary [<=Jelly Bean] or text)"
.PD 0
.IP "2. Logcat System (binary [<=Jelly Bean] or text)" 4
.IX Item "2. Logcat System (binary [<=Jelly Bean] or text)"
.IP "3. Logcat Events (binary [<=Jelly Bean] or text)" 4
.IX Item "3. Logcat Events (binary [<=Jelly Bean] or text)"
.IP "4. Logcat Radio (binary [<=Jelly Bean] or text)" 4
.IX Item "4. Logcat Radio (binary [<=Jelly Bean] or text)"
.IP "5. Logcat Crash (text; from Lollipop)" 4
.IX Item "5. Logcat Crash (text; from Lollipop)"
.IP "6. Bluetooth Hcidump [<=Jelly Bean]" 4
.IX Item "6. Bluetooth Hcidump [<=Jelly Bean]"
.IP "7. Bluetooth Bluedroid External Parser [Kitkat]" 4
.IX Item "7. Bluetooth Bluedroid External Parser [Kitkat]"
.IP "8. Bluetooth BtsnoopNet [>=Lollipop]" 4
.IX Item "8. Bluetooth BtsnoopNet [>=Lollipop]"
.IP "9. WiFi tcpdump [need tcpdump on phone]" 4
.IX Item "9. WiFi tcpdump [need tcpdump on phone]"
.PD
.PP
Please note that it will work also for FirefoxOS or other Android-based stuffs.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-\-help" 4
.IX Item "--help"
Print program arguments.
.IP "\-\-version" 4
.IX Item "--version"
Print program version.
.IP "\-\-extcap\-version" 4
.IX Item "--extcap-version"
Print extcapized version.
.IP "\-\-debug" 4
.IX Item "--debug"
Print additional messages.
.IP "\-\-extcap\-interfaces" 4
.IX Item "--extcap-interfaces"
List available interfaces.
.IP "\-\-extcap\-interface=<interface>" 4
.IX Item "--extcap-interface=<interface>"
Use specified interfaces.
.IP "\-\-extcap\-dlts" 4
.IX Item "--extcap-dlts"
List DLTs of specified interface.
.IP "\-\-extcap\-config" 4
.IX Item "--extcap-config"
List configuration options of specified interface.
.IP "\-\-capture" 4
.IX Item "--capture"
Start capturing from specified interface save saved it in place specified by \-\-fifo.
.IP "\-\-fifo=<path to file or pipe>" 4
.IX Item "--fifo=<path to file or pipe>"
Save captured packet to file or send it through pipe.
.IP "\-\-adb\-server\-ip=<\s-1IP\s0 address>" 4
.IX Item "--adb-server-ip=<IP address>"
Use other then default (127.0.0.1) \s-1ADB\s0 daemon's \s-1IP\s0 address.
.IP "\-\-adb\-server\-tcp\-port=<\s-1TCP\s0 port>" 4
.IX Item "--adb-server-tcp-port=<TCP port>"
Use other then default (5037) \s-1ADB\s0 daemon's \s-1TCP\s0 port.
.IP "\-\-logcat\-text=<\s-1TRUE\s0 or \s-1FALSE\s0>" 4
.IX Item "--logcat-text=<TRUE or FALSE>"
If \s-1TRUE\s0 then use text logcat rather then binary. This option has effect only on
Logcat interfaces. This have no effect from Lollipop where is no binary Logcat
available.
.Sp
Defaults to \s-1FALSE.\s0
.IP "\-\-bt\-server\-tcp\-port=<\s-1TCP\s0 port>" 4
.IX Item "--bt-server-tcp-port=<TCP port>"
Use other then default Bluetooth server \s-1TCP\s0 port on Android side.
On Lollipop defaults is 8872, earlier 4330.
.IP "\-\-bt\-forward\-socket=<\s-1TRUE\s0 or \s-1FALSE\s0>" 4
.IX Item "--bt-forward-socket=<TRUE or FALSE>"
If \s-1TRUE\s0 then socket from Android side is forwarded to host side.
.Sp
Defaults to \s-1FALSE.\s0
.IP "\-\-bt\-local\-ip=<\s-1IP\s0 address>" 4
.IX Item "--bt-local-ip=<IP address>"
Use other then default (127.0.0.1) \s-1IP\s0 address on host side for forwarded socket.
.IP "\-\-bt\-local\-tcp\-port=<\s-1TCP\s0 port>" 4
.IX Item "--bt-local-tcp-port=<TCP port>"
Specify port to be used on host side for forwarded socket.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To see program arguments:
.PP
.Vb 1
\&    androiddump \-\-help
.Ve
.PP
To see program version:
.PP
.Vb 1
\&    androiddump \-\-version
.Ve
.PP
To see interfaces:
.PP
.Vb 1
\&    androiddump \-\-extcap\-interfaces
\&
\&  Example output:
\&    interface {display=Android Logcat Main unknown MSM7627A}{value=android\-logcat\-main\-MSM7627A}
\&    interface {display=Android Logcat System unknown MSM7627A}{value=android\-logcat\-system\-MSM7627A}
\&    interface {display=Android Logcat Radio unknown MSM7627A}{value=android\-logcat\-radio\-MSM7627A}
\&    interface {display=Android Logcat Events unknown MSM7627A}{value=android\-logcat\-events\-MSM7627A}
\&    interface {display=Android Bluetooth Hcidump unknown MSM7627A}{value=android\-bluetooth\-hcidump\-MSM7627A}
\&
\&    Human\-readable display name of interfaces contains interface type, one of:
\&        android\-logcat\-main (Android Logcat Main)
\&        android\-logcat\-system (Android Logcat System)
\&        android\-logcat\-radio (Android Logcat Radio)
\&        android\-logcat\-events (Android Logcat Events)
\&        android\-logcat\-text\-main (Android Logcat Main)
\&        android\-logcat\-text\-system (Android Logcat System)
\&        android\-logcat\-text\-radio (Android Logcat Radio)
\&        android\-logcat\-text\-events (Android Logcat Events)
\&        android\-logcat\-text\-crash (Android Logcat Crash)
\&        android\-bluetooth\-hcidump (Android Bluetooth Hcidump)
\&        android\-bluetooth\-external\-parser (Android Bluetooth External Parser)
\&        android\-bluetooth\-btsnoop\-net (Android Bluetooth Btsnoop Net)
\&        android\-wifi\-tcpdump (Android WiFi)
\&    Then Android Device\*(Aqs name if available, otherwise "unknown".
\&    Last part of it is DeviceID \- the identificator of the device provided by Android SDK (see "adb devices").
\&
\&    For example:
\&    "Android Logcat Main unknown MSM7627A"
\&
\&    "Android Logcat Main" \- user\-friendly type of interface
\&    "unknown" \- name of Android Device
\&    "MSM7627A" \- device ID
.Ve
.PP
To see interface DLTs:
.PP
.Vb 1
\&    androiddump \-\-extcap\-interface=android\-bluetooth\-hcidump\-MSM7627A \-\-extcap\-dlts
\&
\&  Example output:
\&    dlt {number=99}{name=BluetoothH4}{display=Bluetooth HCI UART transport layer plus pseudo\-header}
.Ve
.PP
To see interface configuration options:
.PP
.Vb 1
\&    androiddump \-\-extcap\-interface=android\-bluetooth\-hcidump\-MSM7627A \-\-extcap\-config
\&
\&  Example output:
\&    arg {number=0}{call=\-\-adb\-server\-ip}{display=ADB Server IP Address}{type=string}{default=127.0.0.1}
\&    arg {number=1}{call=\-\-adb\-server\-tcp\-port}{display=ADB Server TCP Port}{type=integer}{range=0,65535}{default=5037}
.Ve
.PP
To capture:
.PP
.Vb 1
\&    androiddump \-\-extcap\-interface=android\-bluetooth\-hcidump\-MSM7627A \-\-fifo=/tmp/bluetooth.pcapng \-\-capture
.Ve
.PP
\&\s-1NOTE:\s0 To stop capturing CTRL+C/kill/terminate application.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBwireshark\fR\|(1), \fBtshark\fR\|(1), \fBdumpcap\fR\|(1), \fBextcap\fR\|(4)
.SH "NOTES"
.IX Header "NOTES"
\&\fBAndroiddump\fR is part of the \fBWireshark\fR distribution.  The latest version
of \fBWireshark\fR can be found at <https://www.wireshark.org>.
.PP
\&\s-1HTML\s0 versions of the Wireshark project man pages are available at:
<https://www.wireshark.org/docs/man\-pages>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.Vb 3
\&  Original Author
\&  \-\-\-\-\-\-\-\- \-\-\-\-\-\-
\&  Michal Labedzki             <michal.labedzki[AT]tieto.com>
\&
\&
\&  Contributors
\&  \-\-\-\-\-\-\-\-\-\-\-\-
\&  Roland Knall              <rknall[AT]gmail.com>
.Ve
