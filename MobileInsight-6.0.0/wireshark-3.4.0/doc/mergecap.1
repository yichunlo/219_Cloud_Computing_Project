.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MERGECAP 1"
.TH MERGECAP 1 "2020-10-29" "3.4.0" "The Wireshark Network Analyzer"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
mergecap \- Merges two or more capture files into one
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBmergecap\fR
[\ \fB\-a\fR\ ]
[\ \fB\-F\fR\ <\fIfile\ format\fR>\ ]
[\ \fB\-h\fR\ ]
[\ \fB\-I\fR\ <\fI\s-1IDB\s0\ merge\ mode\fR>\ ]
[\ \fB\-s\fR\ <\fIsnaplen\fR>\ ]
[\ \fB\-v\fR\ ]
[\ \fB\-V\fR\ ]
\&\fB\-w\fR\ <\fIoutfile\fR>|\-
<\fIinfile\fR> [<\fIinfile\fR> \fI...\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBMergecap\fR is a program that combines multiple saved capture files into
a single output file specified by the \fB\-w\fR argument.  \fBMergecap\fR knows
how to read \fBpcap\fR and \fBpcapng\fR capture files, including those of
\&\fBtcpdump\fR, \fBWireshark\fR and other tools that write captures in those
formats.
.PP
By default, \fBMergecap\fR writes the capture file in \fBpcapng\fR format, and
writes all of the packets from the input capture files to the output file.
.PP
\&\fBMergecap\fR is able to detect, read and write the same capture files that
are supported by \fBWireshark\fR.
The input files don't need a specific filename extension; the file
format and an optional gzip compression will be automatically detected.
Near the beginning of the \s-1DESCRIPTION\s0 section of \fBwireshark\fR\|(1) or
<https://www.wireshark.org/docs/man\-pages/wireshark.html>
is a detailed description of the way \fBWireshark\fR handles this, which is
the same way \fBMergecap\fR handles this.
.PP
\&\fBMergecap\fR can write the file in several output formats.
The \fB\-F\fR flag can be used to specify the format in which to write the
capture file, \fBmergecap \-F\fR provides a list of the available output
formats.
.PP
Packets from the input files are merged in chronological order based on
each frame's timestamp, unless the \fB\-a\fR flag is specified.  \fBMergecap\fR
assumes that frames within a single capture file are already stored in
chronological order.  When the \fB\-a\fR flag is specified, packets are
copied directly from each input file to the output file, independent of
each frame's timestamp.
.PP
The output file frame encapsulation type is set to the type of the input
files if all input files have the same type.  If not all of the input
files have the same frame encapsulation type, the output file type is
set to \s-1WTAP_ENCAP_PER_PACKET.\s0  Note that some capture file formats, most
notably \fBpcap\fR, do not currently support \s-1WTAP_ENCAP_PER_PACKET.\s0
This combination will cause the output file creation to fail.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-a" 4
.IX Item "-a"
Causes the frame timestamps to be ignored, writing all packets from the
first input file followed by all packets from the second input file.  By
default, when \fB\-a\fR is not specified, the contents of the input files
are merged in chronological order based on each frame's timestamp.
.Sp
Note: when merging, \fBmergecap\fR assumes that packets within a capture
file are already in chronological order.
.IP "\-F  <file format>" 4
.IX Item "-F <file format>"
Sets the file format of the output capture file. \fBMergecap\fR can write
the file in several formats; \fBmergecap \-F\fR provides a list of the
available output formats.  By default this is the \fBpcapng\fR format.
.IP "\-h" 4
.IX Item "-h"
Prints the version and options and exits.
.IP "\-I  <\s-1IDB\s0 merge mode>" 4
.IX Item "-I <IDB merge mode>"
Sets the Interface Description Block (\s-1IDB\s0) merge mode to use during merging.
\&\fBmergecap \-I\fR provides a list of the available \s-1IDB\s0 merge modes.
.Sp
Every input file has one or more IDBs, which describe the interface(s) the
capture was performed on originally. This includes encapsulation type,
interface name, etc. When mergecap merges multiple input files, it has to
merge these IDBs somehow for the new merged output file. This flag controls
how that is accomplished. The currently available modes are:
.RS 4
.Sp
.RS 4
\&\fBnone\fR: No merging of IDBs is performed, and instead all IDBs are
copied to the merged output file.
.RE
.RE
.RS 4
.Sp
.RS 4
\&\fBall\fR: IDBs are merged only if all input files have the same number
of IDBs, and each \s-1IDB\s0 matches their respective entry in the
other files. This is the default mode.
.RE
.RE
.RS 4
.Sp
.RS 4
\&\fBany\fR: Any and all duplicate IDBs are merged into one \s-1IDB,\s0 regardless
of what file they are in.
.RE
.RE
.RS 4
.Sp
Note that an \s-1IDB\s0 is only considered a matching duplicate if it has the same
encapsulation type, name, speed, time precision, comments, description, etc.
.RE
.IP "\-s  <snaplen>" 4
.IX Item "-s <snaplen>"
Sets the snapshot length to use when writing the data.
If the \fB\-s\fR flag is used to specify a snapshot length, frames in the
input file with more captured data than the specified snapshot length
will have only the amount of data specified by the snapshot length
written to the output file.  This may be useful if the program that is
to read the output file cannot handle packets larger than a certain size
(for example, the versions of snoop in Solaris 2.5.1 and Solaris 2.6
appear to reject Ethernet frames larger than the standard Ethernet \s-1MTU,\s0
making them incapable of handling gigabit Ethernet captures if jumbo
frames were used).
.IP "\-v" 4
.IX Item "-v"
Causes \fBmergecap\fR to print a number of messages while it's working.
.IP "\-V" 4
.IX Item "-V"
Print the version and exit.
.IP "\-w  <outfile>|\-" 4
.IX Item "-w <outfile>|-"
Sets the output filename. If the name is '\fB\-\fR', stdout will be used.
This setting is mandatory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To merge two capture files together, 100 seconds apart use:
.PP
.Vb 1
\&    capinfos \-aeS a.pcap b.pcap
.Ve
.PP
(Let's suppose a.pcap starts at 1009932757 and b.pcap ends
at 873660281. 1009932757 \- 873660281 \- 100 = 136272376
seconds.)
.PP
.Vb 2
\&    editcap \-t 136272376 b.pcap b\-shifted.pcap
\&    mergecap \-w compare.pcap a.pcap b\-shifted.pcap
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBpcap\fR\|(3), \fBwireshark\fR\|(1), \fBtshark\fR\|(1), \fBdumpcap\fR\|(1), \fBeditcap\fR\|(1), \fBtext2pcap\fR\|(1),
\&\fBpcap\-filter\fR\|(7) or \fBtcpdump\fR\|(8)
.SH "NOTES"
.IX Header "NOTES"
\&\fBMergecap\fR is based heavily upon \fBeditcap\fR by Richard Sharpe
<sharpe[\s-1AT\s0]ns.aus.com> and Guy Harris <guy[\s-1AT\s0]alum.mit.edu>.
.PP
\&\fBMergecap\fR is part of the \fBWireshark\fR distribution.  The latest version
of \fBWireshark\fR can be found at <https://www.wireshark.org>.
.PP
\&\s-1HTML\s0 versions of the Wireshark project man pages are available at:
<https://www.wireshark.org/docs/man\-pages>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.Vb 3
\&  Original Author
\&  \-\-\-\-\-\-\-\- \-\-\-\-\-\-
\&  Scott Renfro             <scott[AT]renfro.org>
\&
\&
\&  Contributors
\&  \-\-\-\-\-\-\-\-\-\-\-\-
\&  Bill Guyton              <guyton[AT]bguyton.com>
.Ve
